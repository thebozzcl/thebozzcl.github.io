<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://bozz.cl/feed.xml" rel="self" type="application/atom+xml" /><link href="https://bozz.cl/" rel="alternate" type="text/html" /><updated>2021-03-12T19:48:12+00:00</updated><id>https://bozz.cl/feed.xml</id><title type="html">The Blogzzolo</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><author><name>Rodrigo Bozzolo (a.k.a. The Bozz)</name></author><entry xml:lang="en"><title type="html">Very Early Thanksgiving Reflection of 2020</title><link href="https://bozz.cl/posts/2020-10-11-thanksgiving.html" rel="alternate" type="text/html" title="Very Early Thanksgiving Reflection of 2020" /><published>2020-10-13T07:59:00+00:00</published><updated>2020-10-13T07:59:00+00:00</updated><id>https://bozz.cl/posts/thanksgiving.en</id><content type="html" xml:base="https://bozz.cl/posts/2020-10-11-thanksgiving.html">&lt;p&gt;There’s this habit I developed sometime after I moved away from Chile.&lt;/p&gt;

&lt;p&gt;One cold October night, I was feeling a little stressed because of work, so I 
went for a drive. I stopped at a park overlooking Elliot Bay. It was dark enough
that I couldn’t really see the water, but I could hear the waves and feel the
breeze. I sat down, and I let my thoughts go wherever they wanted. What was I
doing with my life? Was I really happy with my choices so far, with the sacrifices 
I made? Had it all been worth it?&lt;/p&gt;

&lt;p&gt;At some point, it hit me that what I was doing much better than I was making it
seem. I had made sacrifices, yes, but I grew a lot as a result. I was still feeling
a little lonely, but I had a lot of support from my friends and family back home,
and I was starting to build a group of friends here in Seattle. I realized that,
even though I was going through hard times in that instant, I had a lot to be thankful
for.&lt;/p&gt;

&lt;p&gt;I decided to write that down and share it, and that became the very first “Very
Early Thanksgiving Reflection”, and I’ve tried to keep it up every year since.
Given the current circumstances, I think this year’s reflection is going to be
more important than ever. I’m putting extra time and thought into it. It’s also
Canadian Thanksgiving, so it’s perfect timing, in a way!&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;thanks-for-helping-me-not-go-crazy&quot;&gt;Thanks for helping me not go crazy&lt;/h2&gt;

&lt;p&gt;I’m probably not alone when I say this year has been ridiculously stressful for
me. The isolation and constant threat of COVID-19, the seemingly global social
unrest and recession… I don’t have to tell you. So the first thing I should be
thankful for is all the things that kept me sane.&lt;/p&gt;

&lt;p&gt;I’m thankful that we started to do regular gaming sessions. Be it Golf With Friends,
Among Us, Jackbox Party or Gloomhaven, having these little bits of social interaction
has done wonders for my psyche.&lt;/p&gt;

&lt;p&gt;In a similar vein, I’m thankful I’ve started having regular hang sessions with
friends and family abroad. Honestly, I never considered it a serious option until
the quarantines and self-isolation started to happen… but now it’s become the norm,
I wonder why we didn’t do this more often.&lt;/p&gt;

&lt;p&gt;In a more materialistic view, having my car, camera and guitars has been a godsend.
Being able to just hop into my speedy metal coffin whenever I needed some fresh air
was truly a lifesaver, and then having something to do at my destination in the form
of taking pictures made it a little more meaningful. Flailing at my guitars whenever
the stress started to get to me has been extremely cathartic.&lt;/p&gt;

&lt;h2 id=&quot;thanks-for-enriching-my-life&quot;&gt;Thanks for enriching my life&lt;/h2&gt;

&lt;p&gt;The first “thank you”s I should say here are to my mom and dad. It’s no secret we get
along great, and we talk to each other often. They get me up to speed with what’s going
on with my siblings and cousins, and they’ve kept me informed of all that’s happened
over there, good or bad. They’ve supported me when I’ve felt down, and they’ve confided
in me when they’ve felt the same. As always, I’m extremely thankful I have such a great
relationship with them. I’m also thankful for my sisters and brother. I’m incredibly
proud of the fantastic people they have become. They’ve always been great, but even
more so now.&lt;/p&gt;

&lt;p&gt;I also want to extend special thanks to Randy, Kirby, Matu, Flowers and Camus for
keeping yelling at me until I finally wrote that promotion document. It took
forever because it was a huge pain to put together… and in the end it was nearly
18,000 words long! Yeah, I’ve been busy at Indeed. It seems to have paid off,
because it was received very well, and my chances look good.&lt;/p&gt;

&lt;p&gt;Speaking of work…&lt;/p&gt;

&lt;h2 id=&quot;thanks-for-sticking-through-all-the-hard-work&quot;&gt;Thanks for sticking through all the hard work&lt;/h2&gt;

&lt;p&gt;I feel my teammates and other coworkers deserve a lot of praise this year. We’re
a pretty young team, we were only officially formed about a year ago… but they’ve
been super enthusiastic and positive about all the work we’ve done. This has been
especially important these last 6 months, when we started a high-priority project
that is hopefully nearing its end… if we manage to fix all the bugs, that is.&lt;/p&gt;

&lt;p&gt;They have also been super supportive, helping me out designing and sorting out
several aspects of the project, as well as negotiating terms with sister teams
for our requirements and finding alternatives and compromises where needed. I can
honestly say we wouldn’t have gotten this far without their help.&lt;/p&gt;

&lt;p&gt;I also should thank them for cheering me (and pressuring me) into finishing that
blasted promotion doc. Feels good to not have that hanging over me anymore!&lt;/p&gt;

&lt;h2 id=&quot;thanks-for-all-youve-given-to-us&quot;&gt;Thanks for all you’ve given to us&lt;/h2&gt;

&lt;p&gt;Finally, I feel like I need to dedicate a section of this post to my grandfathers.
After my dad nearly died last year, I was forced to think harder about my relationship
with my family and how I would address other emergencies like that in the future.
Sadly, the world decided to throw curveball after curveball throughout 2019 and 2020.
We’ve held through it all, but the hardest one by far was the passing of my
grandfather, Opa, in late May this year.&lt;/p&gt;

&lt;p&gt;Of all the ridiculous plot twists the last year could throw at us, my grandparents
getting infected with COVID-19 at an assisted living home was one of the cruelest
for us. I feel I have enough to say about that topic to write a whole paper about
the subject. I won’t, because this is still a bit too fresh in our hearts and because
I don’t want to derail this post more than I need to. Let’s just say, losing my
grandfather like that was a huge hit for our family.&lt;/p&gt;

&lt;p&gt;I already wrote a lengthy &lt;a href=&quot;https://www.instagram.com/p/CAwO0E5DAlM/&quot;&gt;Instagram post&lt;/a&gt;
about the life of my grandfather, so there’s no need to paraphrase here. I just want
to let you know that my grandfathers, both of them, left a huge mark in my life even
if indirectly. I’m pretty similar to them in several aspects.&lt;/p&gt;

&lt;p&gt;From my Opa’s side, I take my affinity to music. He was always listening to classical
music on the radio. Even before then, he used to play the guitar. In fact, the guitar
I started to play on was his! He gave it to my mom when he couldn’t play anymore
because of an industrial accident. Eventually, she gave it to me. I’m far from the
only one who received his influence: 4 of his grandchildren, including me, are
interested in music in some way or at least clearly talented.&lt;/p&gt;

&lt;p&gt;From my Nonno’s part, I take on my DIY/tinkering side. &lt;a href=&quot;https://www.instagram.com/p/BoFXzrGHJYC/&quot;&gt;Like I’ve told you guys
before&lt;/a&gt;, he used to have a small shack in
his yard where he would just… do stuff. Honestly, I’m not even sure what kinds of
stuff he did. All I know is there were all kinds of papers and tools and junk over
there. The one thing he made that I remember the best is the counter-weighted stairs
to his house’s attic. It worked surprisingly well!&lt;/p&gt;

&lt;p&gt;I keep a picture of them in my workbench and near my guitar gear respectively, as a
sort of homage. It helps me remind me that I should be thankful for what they gave 
to me. The loss of my Opa this year hurt me deeply, but it would be a disservice to
his memory to focus just on that when he left so much good in us.&lt;/p&gt;

&lt;p&gt;Thank you both for making me who I am today.&lt;/p&gt;</content><author><name>Rodrigo Bozzolo (a.k.a. The Bozz)</name></author><category term="post" /><category term="blog" /><summary type="html">There’s this habit I developed sometime after I moved away from Chile. One cold October night, I was feeling a little stressed because of work, so I went for a drive. I stopped at a park overlooking Elliot Bay. It was dark enough that I couldn’t really see the water, but I could hear the waves and feel the breeze. I sat down, and I let my thoughts go wherever they wanted. What was I doing with my life? Was I really happy with my choices so far, with the sacrifices I made? Had it all been worth it? At some point, it hit me that what I was doing much better than I was making it seem. I had made sacrifices, yes, but I grew a lot as a result. I was still feeling a little lonely, but I had a lot of support from my friends and family back home, and I was starting to build a group of friends here in Seattle. I realized that, even though I was going through hard times in that instant, I had a lot to be thankful for. I decided to write that down and share it, and that became the very first “Very Early Thanksgiving Reflection”, and I’ve tried to keep it up every year since. Given the current circumstances, I think this year’s reflection is going to be more important than ever. I’m putting extra time and thought into it. It’s also Canadian Thanksgiving, so it’s perfect timing, in a way!</summary></entry><entry xml:lang="en"><title type="html">How to take your Pi-hole anywhere using WireGuard</title><link href="https://bozz.cl/posts/2020-05-19-pihole-wireguard.html" rel="alternate" type="text/html" title="How to take your Pi-hole anywhere using WireGuard" /><published>2020-05-20T03:00:00+00:00</published><updated>2020-05-20T03:00:00+00:00</updated><id>https://bozz.cl/posts/pihole-wireguard.en</id><content type="html" xml:base="https://bozz.cl/posts/2020-05-19-pihole-wireguard.html">&lt;p&gt;I’ve been using &lt;a href=&quot;https://pi-hole.net/&quot;&gt;Pi-hole&lt;/a&gt; for several years. It’s just a fantastic way to both improve your online experience and protect your privacy… but it has one problem: you can’t bring it everywhere with you. Let’s fix that by serving it through a home VPN!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚠️ &lt;strong&gt;Update on 2021/03/11&lt;/strong&gt;: I missed some steps regarding Dynamic DNS during the original write-up. The article should be complete now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;why-would-you-want-to-do-this&quot;&gt;Why would you want to do this?&lt;/h2&gt;

&lt;p&gt;My main motivation is ad blocking. Anybody who knows me will be able to tell you this: I hate ads and activity trackers with a passion. I go out of my way to remove them from my life. Being able to use my Pi-hole from anywhere I want is a huge boon.&lt;/p&gt;

&lt;p&gt;There’s other reasons you could want something like this:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Access your home network remotely&lt;/li&gt;
  &lt;li&gt;Give your friends secure access to a home server&lt;/li&gt;
  &lt;li&gt;Protect your privacy on untrusted networks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s very easy to do and can be done on the cheap.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;You’re going to need a few things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A Raspberry Pi. I use a &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&quot;&gt;RPi 4 model B&lt;/a&gt;, but I think older models should work as well.&lt;/li&gt;
  &lt;li&gt;A domain name.&lt;/li&gt;
  &lt;li&gt;A router that supports port forwarding (most do, as far as I know).&lt;/li&gt;
  &lt;li&gt;An account in a DNS hosting service that supports Dynamic DNS.
    &lt;ul&gt;
      &lt;li&gt;I use &lt;a href=&quot;https://dns.he.net/&quot;&gt;Hurricane Electric&lt;/a&gt;. Don’t let the spartan web site fool you… it performs well, it’s got enough features and it’s completely free! (At least for the scope of this project)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Your router’s public IP address.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;first-part-set-up-your-wireguard-domain&quot;&gt;First part: set up your WireGuard domain&lt;/h2&gt;

&lt;p&gt;Once you’ve bought your domain and registered on a DNS service, you need to:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Add your domain to the DNS service, following any instructions they give you. You should have at least the following records:
    &lt;ul&gt;
      &lt;li&gt;SOA (start of authority)&lt;/li&gt;
      &lt;li&gt;NS (nameserver)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Once you have these ready, add an A (domain-to-IP mapping) record with the following settings:
    &lt;ul&gt;
      &lt;li&gt;Name: your domain name (or a subdomain, if you want to use the domain name for something else)&lt;/li&gt;
      &lt;li&gt;IP address: your public IP address&lt;/li&gt;
      &lt;li&gt;TTL: no more than 300 (5 minutes)&lt;/li&gt;
      &lt;li&gt;Dynamic DNS enabled. This will ensure your VPN works even if your public IP address changes.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a Dynamic DNS password for your A record and write it down. This is required so your Raspberry Pi or router can update the A record.&lt;/li&gt;
  &lt;li&gt;Set up Dynamic DNS updates:
    &lt;ul&gt;
      &lt;li&gt;If you want to do them through your Raspberry Pi, you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ddclient&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;I just used my router’s Dynamic DNS settings (which probably uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ddclient&lt;/code&gt; anyway).&lt;/li&gt;
      &lt;li&gt;For Hurricane Electric, these are the settings I used:
        &lt;ul&gt;
          &lt;li&gt;Provider: custom&lt;/li&gt;
          &lt;li&gt;Dynamic DNS server: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dyn.dns.he.net&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Request: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nic/update&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Domain: your domain or subdomain name&lt;/li&gt;
          &lt;li&gt;Username: your domain or subdomain name&lt;/li&gt;
          &lt;li&gt;Password: the Dynamic DNS password you created in step &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3.&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This will allow you to connect to your router remotely. &lt;strong&gt;Make sure to disable WAN access to your router’s admin UI!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;next-set-up-pi-hole&quot;&gt;Next: set up Pi-hole&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: most of these instructions link to the manufacturer or software’s websites. If any links break let me know and I’ll do my best to fix them.&lt;/p&gt;

&lt;p&gt;So you got your Raspberry Pi out of the box and ready to go? Setting up Pi-hole and WireGuard on it is very easy:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.org/documentation/installation/installing-images/&quot;&gt;Install your OS of choice&lt;/a&gt;. While you’re doing this, I recommend you &lt;a href=&quot;https://www.raspberrypi.org/documentation/remote-access/ssh/&quot;&gt;enable SSH&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;SSH into your Raspberry Pi.&lt;/li&gt;
  &lt;li&gt;Give your Raspberry Pi a static LAN IP in your router’s DHCP settings, then write it down
    &lt;ul&gt;
      &lt;li&gt;Reboot your Raspberry Pi (or its networking service) to apply the new IP address&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pi-hole/pi-hole/#one-step-automated-install&quot;&gt;Install Pi-hole&lt;/a&gt;.
    &lt;ul&gt;
      &lt;li&gt;I recommend the automated install to keep things easy: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -sSL https://install.pi-hole.net | bash&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;The install tool will let you choose your upstream DNS providers. Some of the options it gives you are not privacy-friendly, so choose carefully.&lt;/li&gt;
      &lt;li&gt;During installation, the tool will allow you to choose to set your Pi’s current local IP address as static. Do choose this option. Make sure you allocate this IP on your router as well!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Once you’ve confirmed your Pi-hole installation is working (check the dashboard available at http://pi.hole/admin/), set your router to use the Raspberry Pi as your &lt;em&gt;only&lt;/em&gt; DNS server.
    &lt;ul&gt;
      &lt;li&gt;If you want redundancy in case your Pi breaks, you could add a secondary DNS server.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Done! Now any devices on your home network should be able to use your Raspberry Pi to resolve URLs and block ad or tracking domains.&lt;/p&gt;

&lt;h2 id=&quot;finally-setting-up-wireguard&quot;&gt;Finally: setting up WireGuard&lt;/h2&gt;

&lt;p&gt;Of course, this is still not usable remotely, so we need to install WireGuard:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pivpn.io/&quot;&gt;Install PiVPN&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;This one also has an automated installer: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -L https://install.pivpn.io | bash&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;During installation, choose WireGuard as your VPN protocol. Choose whatever port you want, as long as you write it down.&lt;/li&gt;
      &lt;li&gt;When the installer asks you to choose between using a public IP and using a public DNS, choose the DNS. In the next screen, write the (sub)domain you set up earlier.&lt;/li&gt;
      &lt;li&gt;The installer should detect your Pi-hole installation and ask if it should use it. Accept it!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In your router’s settings, enable port forwarding to your Raspberry Pi for the WireGuard port. By default, this is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;51820&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that’s it! Now you need to test your new VPN. I recommend using your phone:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;In the Raspberry Pi, set up a user profile by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pivpn -a&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Once it’s ready, you can use that profile in other devices by:
    &lt;ul&gt;
      &lt;li&gt;Copying the generated config file over to your device.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Recommended&lt;/strong&gt;: using a QR code generated by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pivpn -qr&lt;/code&gt; command. We’re gonna use this one, which should draw a QR code in your terminal.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Whip out your phone and install the WireGuard client:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.wireguard.android&amp;amp;hl=en_US&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://apps.apple.com/us/app/wireguard/id1441195209&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Open the app, and set up a new tunnel. If you followed my advice and used the QR code, you should be able to just point your phone camera at it and the app will do the rest.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Time to test it out! Disconnect your phone from your WiFi, then try to open http://pi.hole/ again. If you did it right, it should open just like that. If that worked, congratulations!&lt;/p&gt;

&lt;h2 id=&quot;what-if-i-dont-want-to-do-all-of-this&quot;&gt;What if I don’t want to do all of this?&lt;/h2&gt;

&lt;p&gt;…I mean, I think every step of this tutorial is easy to follow, but that’s fair. There’s VPN services that offer ad-blocking DNS as part of the bundle, like &lt;a href=&quot;https://windscribe.com/&quot;&gt;Windscribe&lt;/a&gt;. Or you can use a local VPN solution like &lt;a href=&quot;https://f-droid.org/en/packages/org.jak_linux.dns66/&quot;&gt;DNS66&lt;/a&gt;. There’s others, these two are just the ones I’ve tried in the past and liked.&lt;/p&gt;

&lt;p&gt;Both options work very well, but they have their shortcomings:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;They only work on a limited number of devices at a time (you could set up the VPN in your router, but it will slow down your connection).&lt;/li&gt;
  &lt;li&gt;In the case of the VPN, you’re trusting the provider not record, share or sell your browsing habits. That’s a risk I wasn’t willing to take.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whichever option you choose, the internet really changes for the best once you remove most of the noise. Enjoy!&lt;/p&gt;

&lt;h2 id=&quot;common-troubleshooting-steps&quot;&gt;Common troubleshooting steps&lt;/h2&gt;

&lt;p&gt;These are some of the issues I’ve run when re-configuring my WireGuard VPN:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure your Dynamic DNS is updating properly. This could be either a wrong password or Dynamic DNS settings.&lt;/li&gt;
  &lt;li&gt;Make sure your port forwarding is set up correctly. You have no idea how many times I got the port wrong.&lt;/li&gt;
  &lt;li&gt;If you’re having trouble accessing devices on your home network remotely, try the following:
    &lt;ol&gt;
      &lt;li&gt;Open the WireGuard client in your device.&lt;/li&gt;
      &lt;li&gt;Edit the WireGuard tunnel.&lt;/li&gt;
      &lt;li&gt;On “Allowed IPs”, add a IP range that matches your home network. Some typical values are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.0.0/24&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.0/24&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Save and try again.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rodrigo Bozzolo (a.k.a. The Bozz)</name></author><category term="post" /><category term="coding" /><category term="privacy" /><summary type="html">I’ve been using Pi-hole for several years. It’s just a fantastic way to both improve your online experience and protect your privacy… but it has one problem: you can’t bring it everywhere with you. Let’s fix that by serving it through a home VPN! ⚠️ Update on 2021/03/11: I missed some steps regarding Dynamic DNS during the original write-up. The article should be complete now.</summary></entry><entry xml:lang="en"><title type="html">Running Folding@Home on Linux with CUDA support using Docker</title><link href="https://bozz.cl/posts/2020-03-16-fah-container.html" rel="alternate" type="text/html" title="Running Folding@Home on Linux with CUDA support using Docker" /><published>2020-03-17T04:20:00+00:00</published><updated>2020-03-17T04:20:00+00:00</updated><id>https://bozz.cl/posts/fah-container.en</id><content type="html" xml:base="https://bozz.cl/posts/2020-03-16-fah-container.html">&lt;p&gt;Global outbreaks have a way to make you feel powerless. Sitting at home, waiting for the coronavirus to blow over… is there really nothing else you can do? Well, there are ways in which you can help. One such example is &lt;a href=&quot;https://foldingathome.org/&quot;&gt;Folding@Home&lt;/a&gt;. F@H is an initiative that uses your computer’s resources to help simulate how proteins and other complex chemicals work. They have set up &lt;a href=&quot;https://foldingathome.org/2020/02/27/foldinghome-takes-up-the-fight-against-covid-19-2019-ncov/&quot;&gt;high-priority jobs to analyze the 2019-nCoV virus&lt;/a&gt;, in hopes to help find antibody targets.&lt;/p&gt;

&lt;p&gt;If you want to help, it’s as easy as &lt;a href=&quot;https://foldingathome.org/start-folding/&quot;&gt;downloading and running their program&lt;/a&gt;. Well… except for the life of me I couldn’t get it to run in Ubuntu. So I decided to find a way to do so.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;so-what-was-the-problem&quot;&gt;So what was the problem?&lt;/h2&gt;

&lt;p&gt;I run &lt;a href=&quot;https://system76.com/pop&quot;&gt;Pop!_OS 19.10&lt;/a&gt;, which is a Linux distro based on Ubuntu. When I tried to install the F@H packages, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt&lt;/code&gt; told me it can’t find &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python-gnome2&lt;/code&gt; and some other related dependencies. Apparently, that library is not available from Ubuntu 19.04 onward.&lt;/p&gt;

&lt;h2 id=&quot;first-attempt-force-install-all-the-dependencies&quot;&gt;First attempt: force-install all the dependencies&lt;/h2&gt;

&lt;p&gt;I found some guides online that try to download and install all the missing dependencies. It’s very brute-force-ish: you have to download all the DEB installers yourself, then try to install them and fix dependency issues.&lt;/p&gt;

&lt;p&gt;Unsurprisingly, this didn’t work. Failed installations, file conflicts… too many issues I didn’t care to solve.&lt;/p&gt;

&lt;h2 id=&quot;second-attempt-using-a-docker-container&quot;&gt;Second attempt: using a Docker container&lt;/h2&gt;

&lt;p&gt;I talked to some friends in social media about my problem, and somebody came up with the stroke of genius I was missing: use a Docker container! Pre-built containers package all needed dependencies, and there’s a good chance somebody has already done so.&lt;/p&gt;

&lt;p&gt;Indeed, &lt;a href=&quot;https://hub.docker.com/search?q=folding-at-home&amp;amp;type=image&quot;&gt;there were a few options&lt;/a&gt;. I chose &lt;a href=&quot;https://hub.docker.com/r/yurinnick/folding-at-home&quot;&gt;yurinnick’s&lt;/a&gt; since it was updated recently. This container is lightweight and simple, which are two great pluses.&lt;/p&gt;

&lt;p&gt;Unfortunately, something else was missing. While the container ran almost immediately with no fuss, it couldn’t detect my graphics card and that also meant no support for CUDA or OpenCL. This is important because GPUs are generally better at massively parallel operations, which is very useful for work loads like analyzing data and folding proteins.&lt;/p&gt;

&lt;h2 id=&quot;third-attempt-fixing-cuda-and-opencl-support-in-the-container&quot;&gt;Third attempt: fixing CUDA and OpenCL support in the container&lt;/h2&gt;

&lt;p&gt;Luckily for me, my time working as a developer in AWS SageMaker taught me a few things about Docker and working with nVidia containers. Not a lot, to be honest, but good enough to figure out the issue on my own.&lt;/p&gt;

&lt;p&gt;Here’s how I fixed it:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Update your system’s GPU drivers.&lt;/li&gt;
  &lt;li&gt;Optional, but potentially useful for debugging: install &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;nVidia’s CUDA toolkit&lt;/a&gt;. If successful, you should be able to see your current CUDA version when running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvidia-smi&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Install the &lt;a href=&quot;https://github.com/NVIDIA/nvidia-docker&quot;&gt;nVidia Container Toolkit&lt;/a&gt;. This is crucial because it allows your containers to access your graphics card. You can confirm it worked by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker run --gpus all nvidia/cuda:10.0-base nvidia-smi&lt;/code&gt;. If you see the same results as above, it means everything is in order.&lt;/li&gt;
  &lt;li&gt;Finally, I forked &lt;a href=&quot;https://github.com/yurinnick/folding-at-home-docker/&quot;&gt;yurinnick’s repository&lt;/a&gt; and changed the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; to be based on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvidia/opencl&lt;/code&gt;, which includes all the necessary libraries to allow F@H to use it. My final resulting image is currently &lt;a href=&quot;https://hub.docker.com/r/thebozzcl/folding-at-home&quot;&gt;published to Docker Hub and publicly available&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After doing the prep steps above and fixing the container image, I was able to run GPU workloads in the container using the following run command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --gpus all \
  --name folding-at-home \
  -p 7396:7396 \
  -p 36330:36330 \
  -e USER=Anonymous \
  -e TEAM=0 \
  -e ENABLE_GPU=true \
  -e ENABLE_SMP=true \
  --restart unless-stopped \
  thebozzcl/folding-at-home \
  --allow 0/0 \
  --web-allow 0/0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;running-the-container-in-other-os-and-hardware-configurations&quot;&gt;Running the container in other OS and hardware configurations&lt;/h2&gt;

&lt;p&gt;I haven’t done a lot of testing, other than in my own machine, so there’s not a lot I can say. There’s a few things that are pretty certain:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;This should work without much trouble in other machines with nVidia GPUs, as long as you set up the Container Toolkit and keep your drivers up-to-date.&lt;/li&gt;
  &lt;li&gt;This should also work in machines without a dedicated GPU, but you should use a lighter image instead.&lt;/li&gt;
  &lt;li&gt;I have no idea if this will run with an AMD GPU. I don’t know what the process to get them to work looks like… but if you manage to do so, let me know!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;future-steps-and-pending-work-well-not-really&quot;&gt;Future steps and pending work… well, not really&lt;/h2&gt;

&lt;p&gt;I’m afraid I don’t want to sustain this container long-term. I’d be willing to fix small emergent issues should they appear and review merge requests, but I have plenty of work in my plate as it is and I don’t want to commit long-term to this.&lt;/p&gt;

&lt;p&gt;In any case, this container code is dead simple and mostly not mine… so feel free to fork my repo and update the container to your liking!&lt;/p&gt;</content><author><name>Rodrigo Bozzolo (a.k.a. The Bozz)</name></author><category term="post" /><category term="coding" /><category term="blog" /><summary type="html">Global outbreaks have a way to make you feel powerless. Sitting at home, waiting for the coronavirus to blow over… is there really nothing else you can do? Well, there are ways in which you can help. One such example is Folding@Home. F@H is an initiative that uses your computer’s resources to help simulate how proteins and other complex chemicals work. They have set up high-priority jobs to analyze the 2019-nCoV virus, in hopes to help find antibody targets. If you want to help, it’s as easy as downloading and running their program. Well… except for the life of me I couldn’t get it to run in Ubuntu. So I decided to find a way to do so.</summary></entry><entry xml:lang="en"><title type="html">Now I have comments!</title><link href="https://bozz.cl/posts/2020-02-03-added-comments.html" rel="alternate" type="text/html" title="Now I have comments!" /><published>2020-02-04T06:30:00+00:00</published><updated>2020-02-04T06:30:00+00:00</updated><id>https://bozz.cl/posts/added-comments.en</id><content type="html" xml:base="https://bozz.cl/posts/2020-02-03-added-comments.html">&lt;p&gt;It’s been a busy week, between going back to work and my other personal project (expect posts about it soon!). I still found some time to get some work on my blog done, and now I have comments enabled! I’m gonna go on and blabber about the process, as usual.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;When writing this blog, I stick to three design principles:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Keep it light and simple&lt;/li&gt;
  &lt;li&gt;Keep it cheap&lt;/li&gt;
  &lt;li&gt;Do cool stuff anyway&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the start, I knew comments would complicate things a bit. You need to store comments somewhere! You need to save them, and load them and show them! That’s a load of stuff to do, it’s not simple! You can always use a third-party service for comments, but that’s not cheap! I decided to take some time and look at my options carefully. I ended choosing &lt;a href=&quot;https://fastcomments.com/&quot;&gt;FastComments&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;so-why-fastcomments&quot;&gt;So why FastComments?&lt;/h2&gt;

&lt;p&gt;FastComment’s tagline is “At 7.27 kB with no dependencies, it’s the fastest comment service around”. That covers the simple and light part. How about cheap? Well, their cheapest tier costs $5.00 with a load limit of “just” 1 million page loads per month, so I’ll manage. A self-hosted solution in the cloud might be cheaper, to be honest, but that’s more work than I’m willing to do. All in all, FastComments seemed worth a try.&lt;/p&gt;

&lt;h2 id=&quot;how-to-set-it-up&quot;&gt;How to set it up&lt;/h2&gt;

&lt;p&gt;After creating an account, setup is very easy: you just need to paste their code snippet into your site. I did it the Jekyll way and created a new include for comments, and then used that in the site layouts. Then I customized the snippet slightly:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.fastcomments.com/js/embed.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;
&amp;lt;div id=&quot;fastcomments-widget&quot;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FastCommentsUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fastcomments-widget'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;tenantId: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ site.fastcomments.tenantId }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;urlId: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ site.url }}{{ page.permalink | post.permalink }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;commentCountFormat: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[count] comments on {{ page.title | post.title }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;headerHTML: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;h1&amp;gt;{{ site.data.translated_strings.leave_a_comment[site.active_lang] }}&amp;lt;/h1&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first field, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tenantId&lt;/code&gt;, is just the customer identifier.&lt;/p&gt;

&lt;p&gt;FastComments uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urlId&lt;/code&gt; field to aggregate comments. If left unset, it defaults to the URL of the current page. Instead, I hard-coded the default language URL for the page so the comments section is shared across all languages!&lt;/p&gt;

&lt;p&gt;The last two fields, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commentCountFormat&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;headerHTML&lt;/code&gt;, allow you to override some of the strings in the comments widget. I used this, plus the translation scheme I set up in &lt;a href=&quot;/posts/2020-01-26-first-post.html&quot;&gt;my previous post&lt;/a&gt;, to partially translate it!&lt;/p&gt;

&lt;h2 id=&quot;thoughts-and-feature-wishlist&quot;&gt;Thoughts and feature wishlist&lt;/h2&gt;

&lt;p&gt;FastComments is a very new service, so it’s still a WIP. There’s a bunch of improvements I’d like to see:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Better localization or string overrides: &lt;del&gt;I talked to their support team, and they’re planning to improve this in the next few weeks.&lt;/del&gt; &lt;strong&gt;UPDATE 02/08/2020&lt;/strong&gt;: localization is now supported either by auto-detect or by passing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;locale&lt;/code&gt; attribute to the widget. It supports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en_us&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;es_es&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fr_fr&lt;/code&gt;, which should do for my purposes!&lt;/li&gt;
  &lt;li&gt;Better documentation: I struggled to get things working my way a little bit because the documentation for the code snippet is lacking. I had to search through the FastComments blog to &lt;a href=&quot;https://blog.fastcomments.com/(1-24-2020)-how-to-make-a-comment-system-like-hackaday.com.html&quot;&gt;figure out the available arguments&lt;/a&gt;. I’d prefer dedicated documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So while it’s pretty bare-bones right now, FastComments matches my design philosophy well and it’s very cheap. I can’t confirm them being the lightest or the fastest, but it’s more than good enough for what I wanted. I’m pretty happy so far, and I’m looking forward to what they offer in the future.&lt;/p&gt;

&lt;h2 id=&quot;runner-up-comments-system-can-you-do-comments-with-just-a-static-site-and-nothing-else&quot;&gt;Runner-up comments system: can you do comments with just a static site and nothing else?&lt;/h2&gt;

&lt;p&gt;You can! If we kept everything that way, the only way to add comments is by changing the code of my site. This is exactly what &lt;a href=&quot;https://staticman.net/&quot;&gt;Staticman&lt;/a&gt; does: it pushes a change to the code repository for each comment. It’s such a delightfully odd solution, and it works pretty well! There’s a catch, though: it takes a while for comments to show up because the site needs to be rebuilt each time. I opted to keep the site responsive and do it some other way.&lt;/p&gt;</content><author><name>Rodrigo Bozzolo (a.k.a. The Bozz)</name></author><category term="post" /><category term="coding" /><category term="blog" /><summary type="html">It’s been a busy week, between going back to work and my other personal project (expect posts about it soon!). I still found some time to get some work on my blog done, and now I have comments enabled! I’m gonna go on and blabber about the process, as usual.</summary></entry><entry xml:lang="en"><title type="html">First post! Woohoo! Also, how to serve Jekyll in multiple languages</title><link href="https://bozz.cl/posts/2020-01-26-first-post.html" rel="alternate" type="text/html" title="First post! Woohoo! Also, how to serve Jekyll in multiple languages" /><published>2020-01-27T05:30:00+00:00</published><updated>2020-01-27T05:30:00+00:00</updated><id>https://bozz.cl/posts/first-post.en</id><content type="html" xml:base="https://bozz.cl/posts/2020-01-26-first-post.html">&lt;p&gt;Alright, it’s working! It took a bit of effort, mainly because I just don’t know a lot of web development and I wanted things to work in a very specific way… but that’s the fun of DIY. I might as well share what I learned.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The main problem was that I wanted my blog to be both in English and Spanish (and maybe French in the future, if I practice enough). I got it working exactly to my liking! Try it yourself, choose your language from the top navigation bar.&lt;/p&gt;

&lt;h2 id=&quot;how-to-add-multi-language-support&quot;&gt;How to add multi-language support&lt;/h2&gt;

&lt;p&gt;To achieve this, I used the &lt;a href=&quot;https://github.com/untra/polyglot&quot;&gt;Polyglot&lt;/a&gt; plugin. It changes the way Jekyll builds sites, creating subfolders for each configured language. Any page that’s missing a translation uses the default language instead.&lt;/p&gt;

&lt;p&gt;The instructions to set it up are available on the GitHub repo, it’s really easy to do! The only issue I ran into is that it doesn’t work with Jekyll 4.0.0, so I had to downgrade to 3.8.6.&lt;/p&gt;

&lt;h2 id=&quot;how-to-translate-the-blog-theme&quot;&gt;How to translate the blog theme&lt;/h2&gt;

&lt;p&gt;Next, we need to update a few parts of the theme we’re using. For that, you need to copy over the relevant files from it. You can find them by using the following command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle info &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt; minima
/home/bozz/gems/gems/minima-2.5.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You’ll want to go look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt; folders. In particular, I needed the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;footer.html&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;header.html&lt;/code&gt; includes, and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;home.html&lt;/code&gt; layout.&lt;/p&gt;

&lt;p&gt;Next, choose the text you want to translate, and put them in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/translated_strings.yml&lt;/code&gt; file. Here’s a sample of mine:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;Just a little blog to put down my thoughts&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;es_CL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;Sólo un pequeño blog para escribir mis pensamientos&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Subscribe&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;es_CL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Suscríbete&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;via_rss&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;via RSS&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;es_CL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;por RSS&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you can use these snippets like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rss-subscribe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;translated_strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active_lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; | relative_url }}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;translated_strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;via_rss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active_lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;how-to-allow-users-to-change-languages&quot;&gt;How to allow users to change languages&lt;/h2&gt;

&lt;p&gt;The final step is allowing users to choose a language. For that, I added a bunch of links to the nav-bar like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% for &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang_option&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;languages&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
  {% assign lang_icon = site.data.languages[lang_option].icon %}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% assign &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;languages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active_lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_lang&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lang_option&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
    &amp;lt;a class=&quot;page-link&quot; href=&quot; {{ page.permalink }&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
  {% else %}
    &amp;lt;a class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; href=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lang_option&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permalink&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
  {% endif %}
    {{ lang_icon }} {{ lang_name }} 
  &amp;lt;/a&amp;gt;
{% endfor %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There’s two interesting things to note here. First, see that dangling space in the anchor href? That’s on purpose. It tells Polyglot to use the default language link. Second, there’s the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site.data.languages[lang_option]&lt;/code&gt; snippet. That reads the contents of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./_data/languages.yml&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;English&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;es_CL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Inglés&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🇺🇸&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;es_CL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Spanish&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;es_CL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Español&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🇨🇱&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yes, I used emojis for the country icons. Sue me. I also added individual translations for the name on each language, which is overkill but I wanted the practice.&lt;/p&gt;

&lt;p&gt;And that’s it for now! I’m kind of excited about having this little pet project, it’s kind of fun. I have a bunch of features I want to implement, but I’ll tackle those little by little.&lt;/p&gt;</content><author><name>Rodrigo Bozzolo (a.k.a. The Bozz)</name></author><category term="post" /><category term="coding" /><category term="blog" /><summary type="html">Alright, it’s working! It took a bit of effort, mainly because I just don’t know a lot of web development and I wanted things to work in a very specific way… but that’s the fun of DIY. I might as well share what I learned.</summary></entry></feed>